% code.sty
\ProvidesPackage{code}

% Define custom colors (ensure no duplicates)
\definecolor{bgcolor}{RGB}{248,248,248}       % Light gray background
\definecolor{keywordcolor}{RGB}{0,0,160}      % Dark blue keywords
\definecolor{stringcolor}{RGB}{163,21,21}     % Dark red strings
\definecolor{commentcolor}{RGB}{0,128,0}      % Dark green comments
\definecolor{numbercolor}{RGB}{128,0,128}     % Purple line numbers
\definecolor{promptcolor}{RGB}{64,64,64}      % Dark gray prompts

% Custom style for C code
\lstdefinestyle{professionalC}{
    language=C,
    backgroundcolor=\color{bgcolor},
    basicstyle=\linespread{1.1}\footnotesize\ttfamily,
    keywordstyle=\color{keywordcolor}\bfseries,
    commentstyle=\color{commentcolor}\itshape,
    stringstyle=\color{stringcolor},
    numberstyle=\tiny\color{numbercolor},
    identifierstyle=\color{black},
    tabsize=4,
    showstringspaces=false,
    numbers=left,
    stepnumber=1,
    numbersep=10pt,
    frame=single,
    framerule=0.5pt,
    rulecolor=\color{gray},
    breaklines=true,
    captionpos=b,
    xleftmargin=15pt,
    xrightmargin=5pt,
    aboveskip=2pt,
    belowskip=-10pt,
}

% Custom style for Bash scripts
\lstdefinestyle{professionalBash}{
    language=bash,
    backgroundcolor=\color{bgcolor},
    basicstyle=\linespread{1.1}\footnotesize\ttfamily,
    keywordstyle=\color{keywordcolor}\bfseries,
    commentstyle=\color{commentcolor}\itshape,
    stringstyle=\color{stringcolor},
    numberstyle=\tiny\color{numbercolor},
    identifierstyle=\color{black},
    tabsize=4,
    showstringspaces=false,
    numbers=left,
    stepnumber=1,
    numbersep=10pt,
    frame=single,
    framerule=0.5pt,
    rulecolor=\color{gray},
    breaklines=true,
    captionpos=b,
    xleftmargin=15pt,
    xrightmargin=5pt,
    aboveskip=1pt,
    belowskip=-10pt,
    morekeywords={ls, cd, mv, rm, echo, cat, grep, find, sudo, chmod, chown, mkdir},
    literate={\$}{{\textcolor{promptcolor}{\$}}}1,
}
% Custom style for Python code
\lstdefinestyle{professionalPython}{
    language=Python,
    backgroundcolor=\color{bgcolor},
    basicstyle=\linespread{1.1}\footnotesize\ttfamily,
    keywordstyle=\color{keywordcolor}\bfseries,
    commentstyle=\color{commentcolor}\itshape,
    stringstyle=\color{stringcolor},
    numberstyle=\tiny\color{numbercolor},
    identifierstyle=\color{black},
    tabsize=4,
    showstringspaces=false,
    numbers=left,
    stepnumber=1,
    numbersep=10pt,
    frame=single,
    framerule=0.5pt,
    rulecolor=\color{gray},
    breaklines=true,
    captionpos=b,
    xleftmargin=15pt,
    xrightmargin=5pt,
    aboveskip=10pt,
    belowskip=-10pt,
    morekeywords={def, return, class, from, import, as, if, elif, else, while, for, in, try, except, finally, with, yield, lambda, global, nonlocal, assert, pass, break, continue, raise},
    literate=*{:}{{\textcolor{keywordcolor}{:}}}1,
}

% Custom style for Python code
\lstdefinestyle{professionalFake}{
    language=Python,
    backgroundcolor=\color{bgcolor},
    basicstyle=\linespread{1.1}\footnotesize\ttfamily,
    keywordstyle=\color{keywordcolor}\bfseries,
    commentstyle=\color{commentcolor}\itshape,
    stringstyle=\color{stringcolor},
    numberstyle=\tiny\color{numbercolor},
    identifierstyle=\color{black},
    tabsize=4,
    showstringspaces=false,
    numbers=left,
    stepnumber=1,
    numbersep=10pt,
    frame=single,
    framerule=0.5pt,
    rulecolor=\color{gray},
    breaklines=true,
    captionpos=b,
    xleftmargin=15pt,
    xrightmargin=5pt,
    aboveskip=10pt,
    belowskip=-10pt,
    morekeywords={where, choose, loop, def, return, class, from, import, as, if, elif, else, while, for, in, try, except, finally, with, yield, lambda, global, nonlocal, assert, pass, break, continue, raise},
    literate=*{:}{{\textcolor{keywordcolor}{:}}}1,
}


% Custom style for F# code
\lstdefinelanguage{FSharp}%
{morekeywords={let, new, match, with, rec, open, module, namespace, type, of, member, 
               and, for, while, true, false, in, do, begin, end, fun, function, return, yield, 
               try, mutable, if, then, else, cloud, async, static, use, abstract, 
               interface, inherit, finally},
  otherkeywords={let!, return!, do!, yield!, use!, var, from, select, where, order, by},
  keywordstyle=\color{keywordcolor}\bfseries,
  sensitive=true,
  basicstyle=\ttfamily,
  breaklines=true,
  xleftmargin=\parindent,
  aboveskip=\bigskipamount,
  tabsize=4,
  morecomment=[l][\color{commentcolor}]{///},
  morecomment=[l][\color{commentcolor}]{//},
  morecomment=[s][\color{commentcolor}]{{(*}{*)}},
  morestring=[b]",
  showstringspaces=false,
  literate={`}{\`}1,
  stringstyle=\color{stringcolor}
}

\lstdefinestyle{professionalFSharp}{
    language=FSharp,
    backgroundcolor=\color{bgcolor},
    basicstyle=\linespread{1.1}\footnotesize\ttfamily,
    keywordstyle=\color{keywordcolor}\bfseries,
    commentstyle=\color{commentcolor}\itshape,
    stringstyle=\color{stringcolor},
    numberstyle=\tiny\color{numbercolor},
    identifierstyle=\color{black},
    tabsize=4,
    showstringspaces=false,
    numbers=left,
    stepnumber=1,
    numbersep=10pt,
    frame=single,
    framerule=0.5pt,
    rulecolor=\color{gray},
    breaklines=true,
    captionpos=b,
    xleftmargin=15pt,
    xrightmargin=5pt,
    aboveskip=10pt,
    belowskip=-10pt,
    morekeywords={let, new, match, with, rec, open, module, namespace, type, of, member, 
                  and, for, while, true, false, in, do, begin, end, fun, function, return, yield, 
                  try, mutable, if, then, else, cloud, async, static, use, abstract, 
                  interface, inherit, finally},
    otherkeywords={let!, return!, do!, yield!, use!, var, from, select, where, order, by},
    morecomment=[l][\color{commentcolor}]{///},
    morecomment=[l][\color{commentcolor}]{//},
    morecomment=[s][\color{commentcolor}]{{(*}{*)}},
    morestring=[b]",
    literate={`}{\`}1
}

\lstdefinestyle{professionalLISP}{
    language=Lisp,
    backgroundcolor=\color{bgcolor},
    basicstyle=\linespread{1.1}\footnotesize\ttfamily,
    keywordstyle=\color{keywordcolor}\bfseries,
    commentstyle=\color{commentcolor}\itshape,
    stringstyle=\color{stringcolor},
    numberstyle=\tiny\color{numbercolor},
    identifierstyle=\color{black},
    tabsize=4,
    showstringspaces=false,
    numbers=left,
    stepnumber=1,
    numbersep=10pt,
    frame=single,
    framerule=0.5pt,
    rulecolor=\color{gray},
    breaklines=true,
    captionpos=b,
    xleftmargin=15pt,
    xrightmargin=5pt,
    aboveskip=10pt,
    belowskip=-10pt,
    morekeywords={defun, defmacro, lambda, let, let*, loop, when, unless, cond, case, progn, quote, setq, setf, car, cdr, cons, list, append,
                  mapcar, apply, funcall, format, return, do, while, and, or, 
                  not, eq, equal, eql, if, else, defparameter, defvar, defconstant},
    otherkeywords={let!, return!, do!, yield!, use!, var, from, select, where, order, by},
    otherkeywords={define, fun, match, with, rec, in, do, begin, end, function},
    morecomment=[l][\color{commentcolor}]{///},
    morecomment=[l][\color{commentcolor}]{//},
    morestring=[b]",
    literate={`}{\`}1
}

